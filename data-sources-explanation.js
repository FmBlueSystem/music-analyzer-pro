#!/usr/bin/env node

/**
 * üîç EXPLICACI√ìN: FUENTES DE DATOS AI_* vs LLM_*
 * C√≥mo se obtienen los diferentes tipos de metadatos en el sistema
 */

console.log('üîç EXPLICACI√ìN: FUENTES DE DATOS AI_* vs LLM_*');
console.log('===============================================');

console.log('\nüìä RESUMEN EJECUTIVO:');
console.log('- AI_* campos = Algoritmos de audio (C++ o JavaScript)');  
console.log('- LLM_* campos = An√°lisis musical inteligente (Claude API)');
console.log('- Ambos se combinan para an√°lisis completo');

console.log('\nüéØ 1. DATOS AI_* - ALGORITMOS DE PROCESAMIENTO DE AUDIO');
console.log('====================================================');

console.log('\nüî¨ **FUENTE: Algoritmos de An√°lisis de Audio**');
console.log('- üìÇ Archivo: src/ai_algorithms.cpp (motor C++)');
console.log('- üîÑ Fallback: Simulaci√≥n JavaScript en main.js');
console.log('- üì° IPC: analyze-file-with-algorithms');

console.log('\nüéµ **CAMPOS AI_* T√âCNICOS (Calculados por algoritmos):**');
const aiTechnicalFields = [
    'AI_ACOUSTICNESS - An√°lisis espectral (frecuencias vs sintetizadores)',
    'AI_INSTRUMENTALNESS - Detecci√≥n de voz vs instrumental',  
    'AI_SPEECHINESS - Detecci√≥n de contenido hablado',
    'AI_LIVENESS - Detecci√≥n de audio en vivo vs estudio',
    'AI_BPM - Seguimiento de tempo y pulso',
    'AI_LOUDNESS - An√°lisis de RMS y peaks',
    'AI_KEY - Detecci√≥n de clave musical (algoritmo Krumhansl-Schmuckler)',
    'AI_TIME_SIGNATURE - Detecci√≥n de comp√°s (4/4, 3/4, etc)',
    'AI_MODE - Modo mayor/menor'
];

aiTechnicalFields.forEach(field => console.log(`  ‚úÖ ${field}`));

console.log('\nüß† **CAMPOS AI_* INTERPRETATIVOS (Generados por LLM):**');
const aiInterpretativeFields = [
    'AI_ENERGY - Nivel de energ√≠a musical (0.0-1.0)',
    'AI_DANCEABILITY - Capacidad de baile (0.0-1.0)',
    'AI_VALENCE - Valencia emocional (0.0-1.0)',
    'AI_MOOD - Estado de √°nimo ("Energetic", "Melancholic", etc)',
    'AI_CULTURAL_CONTEXT - Contexto cultural espec√≠fico',
    'AI_SUBGENRES - Array de subg√©neros musicales',
    'AI_ERA - D√©cada o √©poca musical',
    'AI_OCCASION - Ocasiones de uso',
    'AI_CHARACTERISTICS - Caracter√≠sticas musicales',
    'AI_CONFIDENCE - Confianza del an√°lisis (0.7-1.0)'
];

aiInterpretativeFields.forEach(field => console.log(`  üß† ${field}`));

console.log('\n‚öôÔ∏è **FLUJO DE OBTENCI√ìN AI_*:**');
console.log(`
1. Usuario hace clic "ü§ñ Analizar"
2. Frontend llama: ipcRenderer.invoke('analyze-file-with-algorithms', filePath, algorithms)
3. Backend main.js ejecuta an√°lisis:
   a) üöÄ Prioridad 1: Motor C++ (metadataAddon.analyzeAudio)
   b) üìä Fallback: Simulaci√≥n JavaScript con valores coherentes
4. Resultados combinan datos t√©cnicos + interpretativos
5. Se guardan en: database.insertLLMMetadata() 
6. Se escriben a archivo: metadataWriter.writeLLMMetadataSafe()
`);

console.log('\nüß† 2. DATOS LLM_* - AN√ÅLISIS MUSICAL INTELIGENTE');
console.log('==============================================');

console.log('\nü§ñ **FUENTE: Claude API (Anthropic)**');
console.log('- üåê API: https://api.anthropic.com/v1/messages');
console.log('- üß† Modelo: claude-3-5-sonnet-20241022');
console.log('- üì° IPC: analyze-llm');

console.log('\nüéµ **CAMPOS LLM_* PRINCIPALES:**');
const llmFields = [
    'LLM_DESCRIPTION - An√°lisis musical detallado (m√°x 250 palabras)',
    'LLM_MOOD - Estado de √°nimo principal',
    'LLM_GENRE - G√©nero principal CORREGIDO por an√°lisis profesional',
    'LLM_SUBGENRE - Subg√©nero espec√≠fico',
    'LLM_CONTEXT - Contexto cultural espec√≠fico',
    'LLM_OCCASIONS - Array de ocasiones de uso',
    'LLM_ENERGY_LEVEL - Nivel de energ√≠a (Alto/Medio/Bajo)',
    'LLM_DANCEABILITY - Capacidad de baile (Alta/Media/Baja)',
    'LLM_RECOMMENDATIONS - Recomendaciones espec√≠ficas para DJs'
];

llmFields.forEach(field => console.log(`  üß† ${field}`));

console.log('\n‚öôÔ∏è **FLUJO DE OBTENCI√ìN LLM_*:**');
console.log(`
1. Usuario hace clic "üß† Analizar" o an√°lisis autom√°tico
2. Frontend llama: ipcRenderer.invoke('analyze-llm', filePath)
3. Backend main.js construye prompt con informaci√≥n del archivo:
   - Metadatos existentes (t√≠tulo, artista, √°lbum, g√©nero)
   - Reglas de coherencia musical
   - Instrucciones de correcci√≥n de g√©nero
4. Llamada a Claude API con prompt especializado
5. Claude analiza y retorna JSON con campos LLM_*
6. Validaci√≥n de coherencia musical autom√°tica
7. Guardado en BD + escritura a archivo de audio
`);

console.log('\nüîÑ 3. INTEGRACI√ìN Y FLUJO COMPLETO');
console.log('=================================');

console.log('\nüìã **AN√ÅLISIS DUAL COORDINADO:**');
console.log(`
üî¨ PASO 1: Algoritmos AI_* (T√©cnico)
‚îú‚îÄ‚îÄ C++: An√°lisis real de audio con FFTW3
‚îú‚îÄ‚îÄ JavaScript: Simulaci√≥n coherente (fallback)  
‚îî‚îÄ‚îÄ Resultado: Datos t√©cnicos precisos

üß† PASO 2: An√°lisis LLM_* (Musical)
‚îú‚îÄ‚îÄ Claude API: An√°lisis contextual profesional
‚îú‚îÄ‚îÄ Correcci√≥n de g√©nero autom√°tica
‚îî‚îÄ‚îÄ Resultado: Interpretaci√≥n musical inteligente

üíæ PASO 3: Unificaci√≥n y Persistencia
‚îú‚îÄ‚îÄ Base de datos: llm_metadata tabla
‚îú‚îÄ‚îÄ Archivo f√≠sico: MP3 ID3v2.4 / FLAC Vorbis
‚îî‚îÄ‚îÄ Cache: Invalidaci√≥n y actualizaci√≥n UI
`);

console.log('\nüéØ **EJEMPLO PR√ÅCTICO - Sabrina "Boys (Summertime Love)":**');
console.log('=======================================================');

console.log('\nüìä **DATOS AI_* (De algoritmos de audio):**');
console.log('  AI_ACOUSTICNESS: 0.23 (detectado: sintetizadores)');
console.log('  AI_BPM: 124.5 (beat tracking del audio)');
console.log('  AI_KEY: "A Minor" (an√°lisis arm√≥nico)');
console.log('  AI_LOUDNESS: -8.2 dB (an√°lisis RMS)');
console.log('  AI_TIME_SIGNATURE: 4 (comp√°s 4/4 detectado)');

console.log('\nüß† **DATOS LLM_* (De Claude API):**');
console.log('  LLM_GENRE: "Italo Disco" (corregido de "Rock")');
console.log('  LLM_DESCRIPTION: "Cl√°sico Italo Disco de 1987..."');
console.log('  LLM_MOOD: "Energetic"');
console.log('  LLM_CONTEXT: "1980s Italian Dance Music Scene"');
console.log('  LLM_RECOMMENDATIONS: "Perfecto para sets de Italo Disco..."');

console.log('\nü§ù **COMBINACI√ìN FINAL:**');
console.log('  - Datos t√©cnicos precisos (AI_*) + Interpretaci√≥n musical (LLM_*)');
console.log('  - Coherencia validada entre ambos tipos');
console.log('  - Persistencia dual: BD + archivo f√≠sico');
console.log('  - UI actualizada con informaci√≥n completa');

console.log('\nüîß 4. CONFIGURACI√ìN Y FALLBACKS');
console.log('===============================');

console.log('\n‚öôÔ∏è **MOTOR C++ (Preferido):**');
console.log('- üìÅ Ubicaci√≥n: build/Release/metadata_addon.node');
console.log('- üöÄ Rendimiento: An√°lisis real con FFTW3');
console.log('- üéØ Estado actual: Deshabilitado temporalmente');

console.log('\nüîÑ **FALLBACK JAVASCRIPT:**');
console.log('- üìç Ubicaci√≥n: main.js (funci√≥n generateMockResults)');
console.log('- üéØ Prop√≥sito: Mantener funcionalidad durante desarrollo');
console.log('- üìä Calidad: Simulaci√≥n coherente basada en metadatos');

console.log('\nüåê **CLAUDE API:**');
console.log('- üîë API Key: Configurada en main.js');
console.log('- üß† Modelo: claude-3-5-sonnet-20241022');
console.log('- üí∞ Costo: ~$0.001 por an√°lisis');
console.log('- üîÑ Fallback: An√°lisis simulado si API no disponible');

console.log('\n‚úÖ **RESUMEN FINAL:**');
console.log('==================');
console.log('üéµ AI_* = Algoritmos t√©cnicos de audio (C++/JS)');
console.log('üß† LLM_* = An√°lisis musical inteligente (Claude)');
console.log('üîÑ Ambos trabajen en conjunto para an√°lisis completo');
console.log('üíæ Datos persistidos en BD + archivos f√≠sicos');
console.log('üéØ Sistema robusto con m√∫ltiples fallbacks');

module.exports = { 
    explainDataSources: () => console.log('Explicaci√≥n completada') 
};